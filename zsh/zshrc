autoload -Uz promptinit
promptinit

setopt autocd
bindkey -e # emacs keybinds

export PATH="/opt/homebrew/opt/curl/bin:$PATH"
export PATH="$HOME/bin/codeql:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="/opt/homebrew/bin:$PATH"
export EDITOR=nvim
export LC_ALL="en_US.utf-8"            # Fixes an encoding problem in tmux

PROMPT="%n@%m:%~ $ "

# coloured man pages, courtesy the Arch wiki
man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;34m") \
        man "$@"
}

## Aliases
# Reload this file
alias reload='source ~/.zshrc'

# Colorize things
alias grep='grep --color'
alias less='less -R'
alias tree='tree -C'
alias ls='ls -G'

# Convenience
alias e=nvim
alias view='nvim -R'
alias ll='ls -l'
alias ktl=kubectl

# Climb file trees
alias ..='echo "cd .." && cd ..'
alias ...='echo "cd ../.." && cd ../..'
alias ....='echo "cd ../../.." && cd ../../..'
alias .....='echo "cd ../../../.." && cd ../../../..'
alias ......='echo "cd ../../../../.." && cd ../../../../..'
alias .......='echo "cd ../../../../../.." && cd ../../../../../..'
alias ........='echo "cd ../../../../../../.." && cd ../../../../../../..'

# Edit all GitHub actions files
alias egha='nvim .github/workflows/*'

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# Git
alias gst='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gco='git checkout '
alias gdiff='git diff'

# Datestamp
alias datestamp="TZ=utc date +'%Y%m%d%H%M00'"

# Java stuffs
export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)
export JAVA_21_HOME=$(/usr/libexec/java_home -v21)

alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'
alias java21='export JAVA_HOME=$JAVA_21_HOME'

## default to Java 11
java21

# üê≥
function dcu() { docker-compose up $@; }
function dcuf() { docker-compose up --build --force-recreate $@; }
alias stopall='docker rm -f $(docker ps -aq)'

## Port magic
# who is listening on my port?
listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}
# find a free port
free-port() {
   python3 -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()'
}

## Coreutils aliases
alias sha256sum=/usr/local/bin/gsha256sum


## Misc
function mmdc() {
    npx -p @mermaid-js/mermaid-cli mmdc $@
}

alias g=./gradlew
alias tf=terraform

function livetail () {
    tsh ssh ${1} 'tail -f /mnt/tmp/logs/account-service/access.log'
}

# make a postgres
function postgres-up () {
    docker run \
        --name myPostgresDb \
        -p 5455:5432 \
        -e POSTGRES_USER=postgresUser \
        -e POSTGRES_PASSWORD=postgresPW \
        -e POSTGRES_DB=postgresDB \
        postgres
}

# Dougie's deploy message script
export GIT_ACCOUNT_SERVICE_DIRECTORY=~/repos/account-service
alias deploy-message='make -C ~/repos/tools/python/account-service-deploy-message/ message'
alias sideband-message='make -C ~/repos/tools/python/account-service-deploy-message/ sideband-message'

# Goddamn cows
export ANSIBLE_NOCOWS=1

## Slurp secrets into the environment, WCGW?
export EPIC_BUILD_CREDENTIALS_ARTIFACTS_USERNAME="alex.hammel"
export EPIC_BUILD_CREDENTIALS_ARTIFACTS_PASSWORD="$(<~/secrets/artifacts-password)"
echo "systemProp.gradle.wrapperUser=${EPIC_BUILD_CREDENTIALS_ARTIFACTS_USERNAME}" > ~/.gradle/gradle.properties
echo "systemProp.gradle.wrapperPassword=${EPIC_BUILD_CREDENTIALS_ARTIFACTS_PASSWORD}" >> ~/.gradle/gradle.properties
echo "systemProp.artifacts.username=${EPIC_BUILD_CREDENTIALS_ARTIFACTS_USERNAME}" > ~/.gradle/gradle.properties
echo "systemProp.artifacts.password=${EPIC_BUILD_CREDENTIALS_ARTIFACTS_PASSWORD}" >> ~/.gradle/gradle.properties
export NPM_TOKEN="$(<~/secrets/npm-token)"
source ~/secrets/mongo_jump_commands
export TEAM_CITY_ACCESS_TOKEN="$(<~/secrets/teamcity_token)"

# Vault stuff
export VAULT_ADDR="$(<~/secrets/vault_addr)"
